---
layout: post
category: "visualization"
title:  "box plot"
tags: [plot, visualization]
---



~~~
iris = sns.load_dataset("iris")
iris.head()

sepal_length	sepal_width	petal_length	petal_width	species
0	5.1	3.5	1.4	0.2	setosa
1	4.9	3.0	1.4	0.2	setosa
2	4.7	3.2	1.3	0.2	setosa
3	4.6	3.1	1.5	0.2	setosa
4	5.0	3.6	1.4	0.2	setosa
~~~

对一个data frame的每一列都画box，非数值的列（比如这里的species）不画；所以此时他们的数值数目可能是一样的。pandas和seaborn都可以直接画。

~~~
fig, ax= plt.subplots(1,2,figsize=(12,6))
iris.plot(kind='box', ax=ax[0], title='with pandas')
sns.boxplot(data=iris, ax=ax[1])
plt.tight_layout()
savefn = '/Users/gongjing/Dropbox/blog_codes/images/box_plot.png'
plt.savefig(savefn)
~~~

[![box_plot.png](https://i.loli.net/2018/02/10/5a7e763574140.png)](https://i.loli.net/2018/02/10/5a7e763574140.png)

根据species进行分类，画某一列的数值的分布；这个只能是seaborn来画；
**添加每个box对应的observation数目**

~~~
fig, ax= plt.subplots(figsize=(5,5))
sns.boxplot(x='species', y='sepal_length', data=iris)

# Calculate number of obs per group & median to position labels
medians = iris.groupby(['species'])['sepal_length'].median().values
maxs = iris.groupby(['species'])['sepal_length'].max().values
means = iris.groupby(['species'])['sepal_length'].mean().values
nobs = iris['species'].value_counts().values
nobs = [str(x) for x in nobs.tolist()]
nobs = ["n: " + i for i in nobs]

# add the number of observations on the top
pos = range(len(nobs))
for tick,label in zip(pos,ax.get_xticklabels()):
    ax.text(pos[tick], medians[tick] + 0.03, nobs[tick],
            horizontalalignment='center', size='x-small', color='w', weight='semibold')
    
    ax.text(pos[tick], maxs[tick] + 0.03, nobs[tick],
            horizontalalignment='center', size='x-small', color='black', weight='semibold')

plt.tight_layout()
savefn = '/Users/gongjing/Dropbox/blog_codes/images/box_plot2.png'
plt.savefig(savefn)
~~~

[![box_plot2.png](https://i.loli.net/2018/02/10/5a7e76358c596.png)](https://i.loli.net/2018/02/10/5a7e76358c596.png)
