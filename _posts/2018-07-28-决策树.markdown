---
layout: post
category: "machinelearning"
title:  "决策树算法"
tags: [python, machine learning]
---

<script type="text/javascript" async
  src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML">
</script>

## 概述

决策树算法：由一个决策图和可能的结果（包括资源成本和风险）组成， 用来创建到达目标的规划。

### 决策树流程图：

 - 判断模块（decision block/node）
 - 终止模块（terminating block/node）：已得出结论，可终止运行
 - 分支（branch/sub-tree）：从判断模块引出的左右箭头 ![](https://cdn-images-1.medium.com/max/1600/0*X-UrBzBeKMnoTY6H.png)

### 如何选取划分特征？

信息增益：划分数据集之前之后信息发生的变化

信息和熵值(参见下图的上半部分)：![](https://i.loli.net/2019/05/16/5cdcd20b9068b64379.png)

### 建树步骤

- 将所有的特征看成一个一个的节点；
- 遍历每个特征，进行分割计算，计算划分之后所有子节点的’纯度’信息，比如信息增值（熵值），选取最好的特征进行分割，从而将数据划分为不同的子节点；
- 对子节点分别递归执行上一步，直到每个最终的子节点都足够’纯’或者都属于同一类别为止。

- 递归结束条件：1）遍历完所有的属性，2）每个分支下的所有实例归属同一类。

### 损失函数

![](https://img-blog.csdnimg.cn/2019041416293471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMyNzY1Ng==,size_16,color_FFFFFF,t_70)

## 实现

### Python源码版本

划分数据集：对于给定的数据集，循环其每一个特征，计算特征对应的香农熵，选取其中熵值最小（信息增益最大）的特征作为划分的特征：

```python
def chooseBestFeatureToSplit(dataSet):
    numFeatures = len(dataSet[0]) - 1      #the last column is used for the labels
    baseEntropy = calcShannonEnt(dataSet)
    bestInfoGain = 0.0; bestFeature = -1
    for i in range(numFeatures):        #iterate over all the features
        featList = [example[i] for example in dataSet]#create a list of all the examples of this feature
        uniqueVals = set(featList)       #get a set of unique values
        newEntropy = 0.0
        for value in uniqueVals:
            subDataSet = splitDataSet(dataSet, i, value)
            prob = len(subDataSet)/float(len(dataSet))
            newEntropy += prob * calcShannonEnt(subDataSet)     
        infoGain = baseEntropy - newEntropy     #calculate the info gain; ie reduction in entropy
        if (infoGain > bestInfoGain):       #compare this to the best gain so far
            bestInfoGain = infoGain         #if better than current best, set to best
            bestFeature = i
    return bestFeature                      #returns an integer
```

## 参考

* 机器学习实战第3章





